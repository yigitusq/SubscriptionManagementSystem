spring.application.name=payment-service
springdoc.packages-to-scan=com.yigitusq.payment_service
springdoc.paths-to-match=/**

spring.datasource.url=jdbc:postgresql://postgres_db:5432/paymentDB
spring.datasource.username=postgres
spring.datasource.password=123

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.javax.persistence.validation.mode = none

server.port=8083
eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka
eureka.client.enabled = true

eureka.instance.hostname=payment-service
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${eureka.instance.hostname}:${spring.application.name}:${server.port}

springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:29092

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
app.kafka.topic.customer-events=customer-events

# Consumer Configuration
spring.kafka.consumer.group-id=payment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.yigitusq.payment_service.dto.PaymentRequestEvent
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.type.mapping=com.yigitusq.subscription_service.event.dto.PaymentRequestEvent:com.yigitusq.payment_service.dto.PaymentRequestEvent

app.kafka.topic.payment-request=payment-request-topic
app.kafka.topic.payment-status=payment-status-topic

management.endpoints.web.exposure.include=zipkin,health

management.tracing.enabled=true

management.tracing.sampling.probability=1.0

management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] %m%n