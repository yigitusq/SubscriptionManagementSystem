spring.application.name=subscription-service

server.port=8081

spring.datasource.url=jdbc:postgresql://localhost:5432/subscriptionDB
spring.datasource.username = postgres
spring.datasource.password = 123

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.javax.persistence.validation.mode = none

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.enabled = true

eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false
eureka.instance.instance-id=${eureka.instance.hostname}:${spring.application.name}:${server.port}

springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

springdoc.packages-to-scan=com.yigitusq.subscription_service
springdoc.paths-to-match=/**

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092

# Consumer Configuration
spring.kafka.consumer.group-id=subscription-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.yigitusq.subscription_service.event.dto.PaymentStatusEvent
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Topics
app.kafka.topic.payment-request=payment-request-topic
app.kafka.topic.payment-status=payment-status-topic

spring.cloud.compatibility-verifier.enabled=false